{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/components/Auth/Authfirebase.ts"],"sourcesContent":["\"use server\"\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  signOut,\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n\r\ninterface UserData {\r\n  sub: string; // Firebase UID used as the document ID\r\n  fullName: string;\r\n  email: string;\r\n  email_verified: boolean;\r\n  picture: string;\r\n  subscription_status: string;\r\n  user_created_at: Date;\r\n}\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.API_KEY,\r\n  authDomain: process.env.AUTH_DOMAIN,\r\n  databaseURL: process.env.DATABASE_URL,\r\n  projectId: process.env.PROJECT_ID,\r\n  appId: process.env.APP_ID,\r\n  measurementId: process.env.MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst googleProvider  = new GoogleAuthProvider()\r\n \r\n// create document\r\nasync function createUserDocument(userData: UserData) {\r\n  try {\r\n    // Create a reference to the document in the \"users\" collection with the ID as userData.sub\r\n    const userRef = doc(db, \"users\", userData.sub);\r\n    // Check if the document already exists\r\n    const userDoc = await getDoc(userRef);\r\n    if (!userDoc.exists()) {\r\n      // Document doesnâ€™t exist, so create it\r\n      await setDoc(userRef, userData);\r\n      // Add a 1-second delay to allow Firestore to finish any pending tasks\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating user document:\", error);\r\n    throw error; // Re-throw the error for handling by the caller\r\n  }\r\n}\r\n\r\nasync function createUserAccount() {\r\n  try {\r\n    const result = await signInWithPopup(auth, googleProvider);\r\n    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n    const idToken = credential?.idToken;\r\n    const user = result.user;\r\n    const userData = {\r\n      sub: user.uid, // Firebase UID used as the document ID\r\n      fullName: user.displayName || \"\",\r\n      email: user.email || \"\",\r\n      email_verified: user.emailVerified,\r\n      picture: user.photoURL || \"\",\r\n      subscription_status: \"Free\",\r\n      user_created_at: new Date(),\r\n    };\r\n    await createUserDocument(userData);\r\n    // Generate a one time code\r\n    // const code = crypto.randomBytes(16).toString(\"hex\");\r\n\r\n    if (window !== undefined) {\r\n      window.location.href = \"pingprospect://\" + idToken;\r\n    }\r\n    return idToken;\r\n  } catch (error) {\r\n    console.error(\"Sign-in error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function SiginOut() {\r\n  try {\r\n    await signOut(auth);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nexport {createUserAccount ,SiginOut};"],"names":[],"mappings":";;;;;;IA6FQ;IAAmB","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/components/Auth/SignIn.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {  createUserAccount } from \"./Authfirebase\";\r\n\r\nfunction SignIn() {\r\n  \r\n  return (\r\n    <div className=\"flex min-h-screen w-full items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-50 p-4\">\r\n      <div className=\"w-full max-w-md rounded-2xl bg-white p-8 shadow-xl\">\r\n        <h2 className=\"mb-8 text-center text-3xl font-bold text-gray-800\">\r\n          Welcome to PingProspect\r\n        </h2>\r\n        <button\r\n          onClick={createUserAccount}\r\n          className=\"w-full rounded-lg bg-[#357AFF] px-4 py-3 text-base font-medium text-white transition-colors hover:bg-[#2E69DE] focus:outline-none focus:ring-2 focus:ring-[#357AFF] focus:ring-offset-2 disabled:opacity-50\"\r\n        >\r\n          <span> SignIn with Google</span>\r\n        </button>\r\n\r\n        {/* {isLoggedIn ? (\r\n          <button\r\n          onClick={SiginOut}\r\n          className=\"w-full rounded-lg bg-[#357AFF] px-4 py-3 text-base font-medium text-white transition-colors hover:bg-[#2E69DE] focus:outline-none focus:ring-2 focus:ring-[#357AFF] focus:ring-offset-2 disabled:opacity-50\"\r\n        > \r\n           <span className=\"text-base\">Signout</span>\r\n        </button>\r\n        ) : (\r\n          <button\r\n            onClick={createUserAccount}\r\n            className=\"w-full rounded-lg bg-[#357AFF] px-4 py-3 text-base font-medium text-white transition-colors hover:bg-[#2E69DE] focus:outline-none focus:ring-2 focus:ring-[#357AFF] focus:ring-offset-2 disabled:opacity-50\"\r\n          > \r\n             <span> SignIn with Google</span>\r\n          </button>\r\n        )} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,SAAS;IAEP,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoD;;;;;;8BAGlE,8OAAC;oBACC,SAAS,kIAAA,CAAA,oBAAiB;oBAC1B,WAAU;8BAEV,cAAA,8OAAC;kCAAK;;;;;;;;;;;;;;;;;;;;;;AAqBhB;uCAEe","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}