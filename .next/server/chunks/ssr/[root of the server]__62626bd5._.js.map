{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/app/%28actions%29/create.ts"],"sourcesContent":["\"use server\"\r\n\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n\r\ninterface UserData {\r\n  sub: string; \r\n  fullName: string;\r\n  email: string;\r\n  email_verified: boolean;\r\n  picture: string;\r\n  subscription_status: string;\r\n  user_created_at: Date;\r\n}\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.API_KEY,\r\n  authDomain: process.env.AUTH_DOMAIN,\r\n  databaseURL: process.env.DATABASE_URL,\r\n  projectId: process.env.PROJECT_ID,\r\n  appId: process.env.APP_ID,\r\n  measurementId: process.env.MEASUREMENT_ID,\r\n};\r\n\r\n\r\n \r\nexport async function getConfig(){\r\n    return firebaseConfig;\r\n}\r\n\r\n// create document\r\nexport  async function createUserDocument(db:any ,  userData: UserData) {\r\n  try {\r\n    // Create a reference to the document in the \"users\" collection with the ID as userData.sub\r\n    const userRef = doc(db, \"users\", userData.sub);\r\n    // Check if the document already exists\r\n    const userDoc = await getDoc(userRef);\r\n    if (!userDoc.exists()) {\r\n      // Document doesnâ€™t exist, so create it\r\n      await setDoc(userRef, userData);\r\n      return false;\r\n    }\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error creating user document:\", error);\r\n    throw error; // Re-throw the error for handling by the caller\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;AAEA;AAAA;;;;;AAcA,MAAM,iBAAiB;IACrB,QAAQ,QAAQ,GAAG,CAAC,OAAO;IAC3B,YAAY,QAAQ,GAAG,CAAC,WAAW;IACnC,aAAa,QAAQ,GAAG,CAAC,YAAY;IACrC,WAAW,QAAQ,GAAG,CAAC,UAAU;IACjC,OAAO,QAAQ,GAAG,CAAC,MAAM;IACzB,eAAe,QAAQ,GAAG,CAAC,cAAc;AAC3C;AAIO,eAAe,uCAAO,GAAP;IAClB,OAAO;AACX;AAGQ,eAAe,uCAAgB,GAAhB,mBAAmB,EAAM,EAAI,QAAkB;IACpE,IAAI;QACF,2FAA2F;QAC3F,MAAM,UAAU,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS,SAAS,GAAG;QAC7C,uCAAuC;QACvC,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,CAAC,QAAQ,MAAM,IAAI;YACrB,uCAAuC;YACvC,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,SAAS;YACtB,OAAO;QACT;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,OAAO,gDAAgD;IAC/D;AACF;;;IArBsB;IAKC;;AALD,+OAAA;AAKC,+OAAA","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/app/auth/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/auth/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/auth/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/app/auth/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/auth/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/auth/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiQ,GAC9R,+BACA","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}