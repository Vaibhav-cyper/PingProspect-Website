{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/utils/validators.ts"],"sourcesContent":["import validator from 'validator';\n\nexport const isValidEmail = (email: string): boolean => {\n  return validator.isEmail(email);\n};"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO,kIAAA,CAAA,UAAS,CAAC,OAAO,CAAC;AAC3B","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/lib/services/contact.ts"],"sourcesContent":["interface ContactFormData {\n  fullName: string;\n  email: string;\n  subject: string;\n  message: string;\n}\n\nexport const submitContactForm = async (data: ContactFormData): Promise<any> => {\n  try {\n    const response = await fetch(\"https://pingprospect-air.gvaibhav2435.workers.dev/websitesupport\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        records: [\n          {\n            fields: {\n              \"Full Name\": data.fullName,\n              \"Email\": data.email,\n              \"Subject\": data.subject,\n              \"Message\": data.message\n            },\n          },\n        ],\n      }),\n    });\n\n    if (!response.ok) {\n      let errorMessage = 'Failed to submit form';\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.message || errorMessage;\n      } catch {\n        // If parsing JSON fails, use default error message\n      }\n      throw new Error(errorMessage);\n    }\n\n    return await  response;\n  } catch (error) {\n    console.error('Error submitting contact form:', error);\n    throw error;\n  }\n};"],"names":[],"mappings":";;;AAOO,MAAM,oBAAoB,OAAO;IACtC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,oEAAoE;YAC/F,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,SAAS;oBACP;wBACE,QAAQ;4BACN,aAAa,KAAK,QAAQ;4BAC1B,SAAS,KAAK,KAAK;4BACnB,WAAW,KAAK,OAAO;4BACvB,WAAW,KAAK,OAAO;wBACzB;oBACF;iBACD;YACH;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,IAAI,eAAe;YACnB,IAAI;gBACF,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,eAAe,UAAU,OAAO,IAAI;YACtC,EAAE,OAAM;YACN,mDAAmD;YACrD;YACA,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAO;IAChB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/components/Contact/ContactForm.tsx"],"sourcesContent":["'use client'\nimport React, { useState } from 'react';\nimport { isValidEmail } from '../../utils/validators';\nimport { submitContactForm } from '../../lib/services/contact';\n\ninterface FormData {\n  fullName: string;\n  email: string;\n  subject: string;\n  message: string;\n}\n\nexport default function ContactForm() {\n  const [formData, setFormData] = useState<FormData>({\n    fullName: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  const [errors, setErrors] = useState<Partial<FormData>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | null>(null);\n\n  const validateForm = () => {\n    const newErrors: Partial<FormData> = {};\n    \n    if (!formData.fullName.trim()) {\n      newErrors.fullName = 'Full name is required';\n    }\n    \n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!isValidEmail(formData.email)) {\n      newErrors.email = 'Please enter a valid email';\n    }\n    \n    if (!formData.subject.trim()) {\n      newErrors.subject = 'Subject is required';\n    }\n    \n    if (!formData.message.trim()) {\n      newErrors.message = 'Message is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n\n    try {\n      const response = await submitContactForm(formData);\n      if (response.ok){\n        setSubmitStatus('success');\n        setFormData({ fullName: '', email: '', subject: '', message: ''         });\n      }\n    } catch (error) {\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setErrors(prev => ({ ...prev, [name]: '' }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div>\n        <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700\">\n          Full Name\n        </label>\n        <input\n          type=\"text\"\n          id=\"fullName\"\n          name=\"fullName\"\n          value={formData.fullName}\n          onChange={handleChange}\n          className={`mt-1 block w-full rounded-md shadow-sm ${\n            errors.fullName ? 'border-red-300' : 'border-gray-300'\n          } focus:border-blue-500 focus:ring-blue-500`}\n        />\n        {errors.fullName && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.fullName}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n          Email Address\n        </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          className={`mt-1 block w-full rounded-md shadow-sm ${\n            errors.email ? 'border-red-300' : 'border-gray-300'\n          } focus:border-blue-500 focus:ring-blue-500`}\n        />\n        {errors.email && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700\">\n          Subject\n        </label>\n        <input\n          type=\"text\"\n          id=\"subject\"\n          name=\"subject\"\n          value={formData.subject}\n          onChange={handleChange}\n          className={`mt-1 block w-full rounded-md shadow-sm ${\n            errors.subject ? 'border-red-300' : 'border-gray-300'\n          } focus:border-blue-500 focus:ring-blue-500`}\n        />\n        {errors.subject && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.subject}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700\">\n          Message\n        </label>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          rows={4}\n          value={formData.message}\n          onChange={handleChange}\n          className={`mt-1 block w-full rounded-md shadow-sm ${\n            errors.message ? 'border-red-300' : 'border-gray-300'\n          } focus:border-blue-500 focus:ring-blue-500`}\n        />\n        {errors.message && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.message}</p>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        disabled={isSubmitting}\n        className={`w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\n          isSubmitting ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n        } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}\n      >\n        {isSubmitting ? 'Submitting...' : 'Submit'}\n      </button>\n\n      {submitStatus === 'success' && (\n        <p className=\"text-sm text-green-600 text-center\">\n          Thank you for your message. We'll get back to you soon!\n        </p>\n      )}\n\n      {submitStatus === 'error' && (\n        <p className=\"text-sm text-red-600 text-center\">\n          Something went wrong. Please try again later.\n        </p>\n      )}\n    </form>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAYe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QACjD,UAAU;QACV,OAAO;QACP,SAAS;QACT,SAAS;IACX;IAEA,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB,CAAC;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA8B;IAE7E,MAAM,eAAe;QACnB,MAAM,YAA+B,CAAC;QAEtC,IAAI,CAAC,SAAS,QAAQ,CAAC,IAAI,IAAI;YAC7B,UAAU,QAAQ,GAAG;QACvB;QAEA,IAAI,CAAC,SAAS,KAAK,CAAC,IAAI,IAAI;YAC1B,UAAU,KAAK,GAAG;QACpB,OAAO,IAAI,CAAC,CAAA,GAAA,mHAAA,CAAA,eAAY,AAAD,EAAE,SAAS,KAAK,GAAG;YACxC,UAAU,KAAK,GAAG;QACpB;QAEA,IAAI,CAAC,SAAS,OAAO,CAAC,IAAI,IAAI;YAC5B,UAAU,OAAO,GAAG;QACtB;QAEA,IAAI,CAAC,SAAS,OAAO,CAAC,IAAI,IAAI;YAC5B,UAAU,OAAO,GAAG;QACtB;QAEA,UAAU;QACV,OAAO,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK;IAC3C;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,CAAC,gBAAgB;QAErB,gBAAgB;QAChB,gBAAgB;QAEhB,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,0HAAA,CAAA,oBAAiB,AAAD,EAAE;YACzC,IAAI,SAAS,EAAE,EAAC;gBACd,gBAAgB;gBAChB,YAAY;oBAAE,UAAU;oBAAI,OAAO;oBAAI,SAAS;oBAAI,SAAS;gBAAW;YAC1E;QACF,EAAE,OAAO,OAAO;YACd,gBAAgB;QAClB,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAM,CAAC;QAC/C,UAAU,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAG,CAAC;IAC5C;IAEA,qBACE,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAW,WAAU;kCAA0C;;;;;;kCAG9E,8OAAC;wBACC,MAAK;wBACL,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,QAAQ;wBACxB,UAAU;wBACV,WAAW,CAAC,uCAAuC,EACjD,OAAO,QAAQ,GAAG,mBAAmB,kBACtC,0CAA0C,CAAC;;;;;;oBAE7C,OAAO,QAAQ,kBACd,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,QAAQ;;;;;;;;;;;;0BAI7D,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAQ,WAAU;kCAA0C;;;;;;kCAG3E,8OAAC;wBACC,MAAK;wBACL,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,KAAK;wBACrB,UAAU;wBACV,WAAW,CAAC,uCAAuC,EACjD,OAAO,KAAK,GAAG,mBAAmB,kBACnC,0CAA0C,CAAC;;;;;;oBAE7C,OAAO,KAAK,kBACX,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,KAAK;;;;;;;;;;;;0BAI1D,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAU,WAAU;kCAA0C;;;;;;kCAG7E,8OAAC;wBACC,MAAK;wBACL,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,OAAO;wBACvB,UAAU;wBACV,WAAW,CAAC,uCAAuC,EACjD,OAAO,OAAO,GAAG,mBAAmB,kBACrC,0CAA0C,CAAC;;;;;;oBAE7C,OAAO,OAAO,kBACb,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,OAAO;;;;;;;;;;;;0BAI5D,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAU,WAAU;kCAA0C;;;;;;kCAG7E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,MAAM;wBACN,OAAO,SAAS,OAAO;wBACvB,UAAU;wBACV,WAAW,CAAC,uCAAuC,EACjD,OAAO,OAAO,GAAG,mBAAmB,kBACrC,0CAA0C,CAAC;;;;;;oBAE7C,OAAO,OAAO,kBACb,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,OAAO;;;;;;;;;;;;0BAI5D,8OAAC;gBACC,MAAK;gBACL,UAAU;gBACV,WAAW,CAAC,mHAAmH,EAC7H,eAAe,gBAAgB,gCAChC,wEAAwE,CAAC;0BAEzE,eAAe,kBAAkB;;;;;;YAGnC,iBAAiB,2BAChB,8OAAC;gBAAE,WAAU;0BAAqC;;;;;;YAKnD,iBAAiB,yBAChB,8OAAC;gBAAE,WAAU;0BAAmC;;;;;;;;;;;;AAMxD","debugId":null}}]
}