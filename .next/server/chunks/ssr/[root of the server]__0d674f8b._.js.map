{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/components/Auth/Authfirebase.ts"],"sourcesContent":["\"use server\"\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  signOut,\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n\r\ninterface UserData {\r\n  sub: string; // Firebase UID used as the document ID\r\n  fullName: string;\r\n  email: string;\r\n  email_verified: boolean;\r\n  picture: string;\r\n  subscription_status: string;\r\n  user_created_at: Date;\r\n}\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.API_KEY,\r\n  authDomain: process.env.AUTH_DOMAIN,\r\n  databaseURL: process.env.DATABASE_URL,\r\n  projectId: process.env.PROJECT_ID,\r\n  appId: process.env.APP_ID,\r\n  measurementId: process.env.MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst googleProvider  = new GoogleAuthProvider()\r\n \r\n// create document\r\nasync function createUserDocument(userData: UserData) {\r\n  try {\r\n    // Create a reference to the document in the \"users\" collection with the ID as userData.sub\r\n    const userRef = doc(db, \"users\", userData.sub);\r\n    // Check if the document already exists\r\n    const userDoc = await getDoc(userRef);\r\n    if (!userDoc.exists()) {\r\n      // Document doesnâ€™t exist, so create it\r\n      await setDoc(userRef, userData);\r\n      // Add a 1-second delay to allow Firestore to finish any pending tasks\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating user document:\", error);\r\n    throw error; // Re-throw the error for handling by the caller\r\n  }\r\n}\r\n\r\nasync function createUserAccount() {\r\n  try {\r\n    const result = await signInWithPopup(auth, googleProvider);\r\n    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n    const idToken = credential?.idToken;\r\n    const user = result.user;\r\n    const userData = {\r\n      sub: user.uid, // Firebase UID used as the document ID\r\n      fullName: user.displayName || \"\",\r\n      email: user.email || \"\",\r\n      email_verified: user.emailVerified,\r\n      picture: user.photoURL || \"\",\r\n      subscription_status: \"Free\",\r\n      user_created_at: new Date(),\r\n    };\r\n    await createUserDocument(userData);\r\n    // Generate a one time code\r\n    // const code = crypto.randomBytes(16).toString(\"hex\");\r\n\r\n    if (window !== undefined) {\r\n      window.location.href = \"pingprospect://\" + idToken;\r\n    }\r\n    return idToken;\r\n  } catch (error) {\r\n    console.error(\"Sign-in error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function SiginOut() {\r\n  try {\r\n    await signOut(auth);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nexport {createUserAccount ,SiginOut};"],"names":[],"mappings":";;;;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;;;;;;;AAcA,MAAM,iBAAiB;IACrB,QAAQ,QAAQ,GAAG,CAAC,OAAO;IAC3B,YAAY,QAAQ,GAAG,CAAC,WAAW;IACnC,aAAa,QAAQ,GAAG,CAAC,YAAY;IACrC,WAAW,QAAQ,GAAG,CAAC,UAAU;IACjC,OAAO,QAAQ,GAAG,CAAC,MAAM;IACzB,eAAe,QAAQ,GAAG,CAAC,cAAc;AAC3C;AAEA,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAC1B,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,iBAAkB,IAAI,wNAAA,CAAA,qBAAkB;AAE9C,kBAAkB;AAClB,eAAe,mBAAmB,QAAkB;IAClD,IAAI;QACF,2FAA2F;QAC3F,MAAM,UAAU,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS,SAAS,GAAG;QAC7C,uCAAuC;QACvC,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,CAAC,QAAQ,MAAM,IAAI;YACrB,uCAAuC;YACvC,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,SAAS;YACtB,sEAAsE;YACtE,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;QACrD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,OAAO,gDAAgD;IAC/D;AACF;AAEA,eAAe;IACb,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,qNAAA,CAAA,kBAAe,AAAD,EAAE,MAAM;QAC3C,MAAM,aAAa,wNAAA,CAAA,qBAAkB,CAAC,oBAAoB,CAAC;QAC3D,MAAM,UAAU,YAAY;QAC5B,MAAM,OAAO,OAAO,IAAI;QACxB,MAAM,WAAW;YACf,KAAK,KAAK,GAAG;YACb,UAAU,KAAK,WAAW,IAAI;YAC9B,OAAO,KAAK,KAAK,IAAI;YACrB,gBAAgB,KAAK,aAAa;YAClC,SAAS,KAAK,QAAQ,IAAI;YAC1B,qBAAqB;YACrB,iBAAiB,IAAI;QACvB;QACA,MAAM,mBAAmB;QACzB,2BAA2B;QAC3B,uDAAuD;QAEvD,IAAI,WAAW,WAAW;YACxB,OAAO,QAAQ,CAAC,IAAI,GAAG,oBAAoB;QAC7C;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,MAAM;IACR;AACF;AAEA,eAAe;IACb,IAAI;QACF,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;IAChB,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;;;;IAGQ,uCAAe,GAAf;IAAmB,uCAAM,GAAN;;AAAnB,+OAAA;AAAmB,+OAAA","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/components/Auth/SignIn.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Auth/SignIn.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Auth/SignIn.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/components/Auth/SignIn.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Auth/SignIn.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Auth/SignIn.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/app/auth/page.tsx"],"sourcesContent":["import React from 'react';\r\nimport SignIn from '../../components/Auth/SignIn';\r\n\r\nfunction Page() {\r\n  return (\r\n    <>\r\n      <SignIn/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;"],"names":[],"mappings":";;;;AACA;;;AAEA,SAAS;IACP,qBACE;kBACE,cAAA,8OAAC,6HAAA,CAAA,UAAM;;;;;;AAGb;uCAEe","debugId":null}}]
}