{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/lib/services/blog.ts"],"sourcesContent":["'use server'\r\nimport  { createClient}   from \"next-sanity\";\r\n\r\n\r\nconst config = {\r\n  projectId : process.env.PROJECTID,\r\n  dataset : process.env.DATASETS,\r\n  apiVersion: '2021-08-31', \r\n  token : process.env.TOKEN,\r\n  useCdn: false,\r\n}\r\n\r\nconst client = createClient(config);\r\n\r\nexport async function getallguides() {\r\n  const query =` *[_type == \"post\" && status==\"Live\"]`;\r\n  const posts = await client.fetch(query);\r\n  return posts \r\n};\r\n\r\nexport async function getguide(slug: string) {\r\n  const query = `*[_type == \"post\" && status==\"Live\" && slug.current == '${slug}'][0]`;\r\n  const post = await client.fetch(query);\r\n  return post; // Returns a single post object or null if no match\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;IAcsB;IAMA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/PingProspect/pingprospect-nextapp/app/guide/%5B...post%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, redirect } from \"next/navigation\";\nimport { Calendar, Clock, ArrowLeft } from \"lucide-react\";\nimport Link from \"next/link\";\nimport PortableText from \"react-portable-text\";\nimport { getguide } from \"../../../lib/services/blog\";\n\ninterface Post {\n  _id: string;\n  Status: string;\n  mainImage: {\n    _type: \"image\";\n    asset: {\n      _ref: \"image-1bc330a1a1b481d7ede7cb284abde43f3b19ea78-1280x720-png\";\n      _type: \"reference\";\n    };\n  };\n\n  title: string;\n  body: any;\n  meta_description: string;\n  keywords: string[];\n  readTime: string;\n  Category: string;\n  _createdAt: string;\n}\n\nexport default function BlogPost() {\n  const  params  = useParams() ;\n  const slug = params.post?.[0] || \"\";\n  const [post, setPost] = useState<Post | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        if (slug !== undefined) {\n          if (typeof slug === \"string\") {\n            const Postresult = await getguide(slug);\n            console.log(Postresult);\n            setPost(Postresult || null);\n          } else {\n            setError(true);\n          }\n        } else {\n          setError(true);\n        }\n      } catch (error) {\n        setError(true);\n        console.error(\"Error fetching posts:\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPosts();\n  }, [slug]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"loader\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div>Something Went Wrong....</div>\n      </div>\n    );\n  }\n\n  if (!post) {\n    return redirect(\"/guide\");\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 pt-16\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-24\">\n        <Link\n          href=\"/guide\"\n          className=\"inline-flex items-center text-blue-600 hover:text-blue-700 mb-8\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back to Guides\n        </Link>\n\n        <article className=\"bg-white rounded-2xl shadow-lg overflow-hidden\">\n          <div className=\"h-96 relative\">\n            <img\n              src={urlFor(post.mainImage).url()}\n              alt={post.title}\n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n\n          <div className=\"p-8\">\n            <div className=\"flex items-center gap-4 mb-4\">\n              <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800\">\n                {post.Category}\n              </span>\n            </div>\n\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              {post.title}\n            </h1>\n\n            <div className=\"flex items-center text-sm text-gray-500 gap-4 mb-8\">\n              <div className=\"flex items-center\">\n                <Calendar className=\"h-4 w-4 mr-1\" />\n                {new Date(post._createdAt).toLocaleDateString(\"en-US\", {\n                  month: \"long\",\n                  day: \"numeric\",\n                  year: \"numeric\",\n                })}\n              </div>\n            </div>\n\n            <div className=\"prose max-w-none text-gray-600\">\n              {/* {post.body} */}\n              <PortableText\n                // Pass in block content straight from Sanity.io\n                content={post.body}\n                projectId = {process.env.PROJECTID}\n                dataset = {process.env.DATASETS}\n               \n                // Optionally override marks, decorators, blocks, etc. in a flat\n                // structure without doing any gymnastics\n                serializers={{\n                  h1: (props: React.HTMLAttributes<HTMLHeadingElement>) => <h1 style={{ color: \"red\" }} {...props} />,\n                  li: ({ children }: { children: React.ReactNode }) => (\n                    <li className=\"special-list-item\">{children}</li>\n                  ),\n                  \n                }}\n              />\n            </div>\n          </div>\n        </article>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;AA8H6B;;AA7H7B;AACA;AACA;AAAA;AACA;AACA;AACA;;;AANA;;;;;;;AA4Be,SAAS;;IACtB,MAAO,SAAU,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACzB,MAAM,OAAO,OAAO,IAAI,EAAE,CAAC,EAAE,IAAI;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,eAAe;gBACb,IAAI;oBACF,IAAI,SAAS,WAAW;wBACtB,IAAI,OAAO,SAAS,UAAU;4BAC5B,MAAM,aAAa,MAAM,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;4BAClC,QAAQ,GAAG,CAAC;4BACZ,QAAQ,cAAc;wBACxB,OAAO;4BACL,SAAS;wBACX;oBACF,OAAO;wBACL,SAAS;oBACX;gBACF,EAAE,OAAO,OAAO;oBACd,SAAS;oBACT,QAAQ,KAAK,CAAC,yBAAyB;gBACzC,SAAU;oBACR,WAAW;gBACb;YACF;YACA;QACF;6BAAG;QAAC;KAAK;IAET,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;0BAAI;;;;;;;;;;;IAGX;IAEA,IAAI,CAAC,MAAM;QACT,OAAO,CAAA,GAAA,qIAAA,CAAA,WAAQ,AAAD,EAAE;IAClB;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,+JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;;sCAEV,6LAAC,mNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;8BAIxC,6LAAC;oBAAQ,WAAU;;sCACjB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCACC,KAAK,OAAO,KAAK,SAAS,EAAE,GAAG;gCAC/B,KAAK,KAAK,KAAK;gCACf,WAAU;;;;;;;;;;;sCAId,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAK,WAAU;kDACb,KAAK,QAAQ;;;;;;;;;;;8CAIlB,6LAAC;oCAAG,WAAU;8CACX,KAAK,KAAK;;;;;;8CAGb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,6MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;4CACnB,IAAI,KAAK,KAAK,UAAU,EAAE,kBAAkB,CAAC,SAAS;gDACrD,OAAO;gDACP,KAAK;gDACL,MAAM;4CACR;;;;;;;;;;;;8CAIJ,6LAAC;oCAAI,WAAU;8CAEb,cAAA,6LAAC,6JAAA,CAAA,UAAY;wCACX,gDAAgD;wCAChD,SAAS,KAAK,IAAI;wCAClB,WAAa,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,SAAS;wCAClC,SAAW,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ;wCAE/B,gEAAgE;wCAChE,yCAAyC;wCACzC,aAAa;4CACX,IAAI,CAAC,sBAAoD,6LAAC;oDAAG,OAAO;wDAAE,OAAO;oDAAM;oDAAI,GAAG,KAAK;;;;;;4CAC/F,IAAI,CAAC,EAAE,QAAQ,EAAiC,iBAC9C,6LAAC;oDAAG,WAAU;8DAAqB;;;;;;wCAGvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQhB;GArHwB;;QACL,qIAAA,CAAA,YAAS;;;KADJ","debugId":null}}]
}